＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＊  【QRCode対応完全無料ライブラリDotNetBarcodeV2.4.0】
＊ 　  VB2005,C#2005で使える高機能QRCode対応完全無料バーコードライブラリ(サンプルソース付)
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

【０．商標】

　　ＱＲコードは(株)デンソーウェーブの登録商標です。

【１.特徴】

    ★ 二次元バーコードのＱＲコードに完全対応。さらにJAN13,JAN8,CODE39もサポート
　　★ ＱＲコードには２０箇所以上の色が個別に設定でき、カラフルなＱＲコードが作成可能
　　★ ＱＲコードの背景にBitMap,Jpeg,Gifの指定が可能
　　★ ＱＲコードは任意の角度に回転可能
    ★ 高機能（５８種類のメソッドとプロパティをサポート）
    ★ 高性能なデザイン（最大バージョン40のバーコードを約0.5秒で表示可能)
    ★ ＱＲコードは最大バージョン40までフルサポート
    ★ 文字モードも数字、英数字、漢字、バイナリをフルサポートし自動判定可能
    ★ Visual Basic .NET 2005とVisual C# .NET 2005に完全に対応した完全無料バーコードライブラリー
    ★ 完全フリーですので、無料で自分のアプリケーションの中で自由使用可能
    ★ バーコードの大きさを始め、色やフォントの大きさ、チェックディジット、
       ファイルへの書き込み、クリップボードへの書き込みなど豊富なオプション付き
    ★ ファイルへの書き込みは、BitMap、Gif、Jpeg、Png、Tiffの５種類に対応
    ★ 本ライブラリーを使った、Visual Basic .NET とVisual C# .NETの完全ソースコード公開サンプル付き
    ★ 簡単にバーコードアプリケーションが作れる解説書付

【２.バージョン・アップ情報】

　　　2006/10/16 Version 2.4.0
　　　2006/10/06 Version 2.3.0
　　　2006/09/29 Version 2.2.0
　　　2006/08/23 Version 2.0.0
　　　2004/07/21 Version 1.0.0

    詳細は、「DotNetBarcodeV2.4.0での機能強化点.txt」に記載。

【３.始めに】

　　この中にはDotNetBarcodeクラスライブラリ(DotNetBarcode.dll)と
　　DotNetBarcodeサンプルプログラム(ソースコードつき)が含まれております。

　　DotNetBarcodeクラスライブラリ(DotNetBarcode.dll)はVB.NETやC#.NETなどから呼べる、
　　.NET2005用のバーコードクラスライブラリーです。

　　DotNetBarcodeクラスライブラリ(DotNetBarcode.dll)はソースは提供して
　　いませんので、「DotNetBarcodeクラスライブラリ(DotNetBarcode.dll)の仕様書」を
　　参照してください。

　　仕様書だけではわかりにくいので、DotNetBarcodeクラスライブラリを使った
　　VB.NETとC#.NETのサンプルプログラムを用意しました。

【４.主なファイルの説明】

　　DotNetBarcode.dll => DotNetBarcodeクラスライブラリ
　　　　　　　　　　　　　(使うときは、メニューより「プロジェクト」−「参照の追加」を行う)
　　VBSample => VisualBasicのサンプル
　　CsharpSample => C#のサンプル(VisualBasicのサンプルの方が高機能)
　　DotNetBarcodeクラスライブラリ(DotNetBarcode.dll)の仕様書 => 仕様書
　　DotNetBarcodeクラスライブラリを使ったQRコードアプリの作り方 => アプリケーションの作り方
　　サンプルアプリケーション画面 => サンプルアプリケーション画面
　　【始めにお読みください】 => このファイル

【５.サポート】

　　フリーウェアです。自由に配布出来ます。使用も自由です。
　　質問は回答できるかはわかりませんが、DotNetBarcode@yahoo.co.jp
　　まで、連絡ください。問い合わせの内容によっては、お答えできないケースがあります。
    また、作者の都合により、回答が大幅に遅れることもありますので、予め了承しておいてください。
　　基本的に、回答はサポートホームページに掲載します。

    サポートホームページ：http://www.geocities.jp/japan_inf/DotNetBarcode
    最新版ダウンロード先：http://www.geocities.jp/japan_inf/DotNetBarcode

　　ホームページのリンクは自由です。ホームページのリンクは歓迎いたします。

【６.配布形式】

   (1) 転載は自由ですが、オリジナルの配布の形態を変更することは禁止します。

   (2) 本ソフトウェアは、個人のプライベートな利用だけでなく、
       アプリに組み込んでの大量配布や業務用に用いることも自由です。
       アプリに組み込む場合は本プログラムを使用していることを明示してください。

   (3) 本ドキュメント中で提示している本ソフトウェアの性能，品質，適合性などにつ
       いては目安であり、作者はこれらの点について、明確な基準の提示や保証は致し
       ません。

   (4) 本ソフトウェアを使用することによって発生する如何なる障害、あるいは予期し
       ない波及効果に対して、作者は一切の責任を負いません。また、バージョンアッ
       プ，バグ修正などを行う義務もないものとします。


【７.動作環境】

   (1) OS        ： Windows XP,Windows 2000,Windows Server 2003
   (2) 開発ツール:  Visual Studio 2005 または Visual Basic 2005 または Visual C# 2005 が必要です。
                    Express Editionでも使えますので、無料でバーコードアプリケーションの開発ができます。
   (3)稼働環境   :稼動には.NetFrameWork 2.0が必要になります(無料)

   Visual Studio 2003 または Visual Basic 2003 または Visual C# 2003でお使いの方や、
   Windows 98,Windows meでお使いの方は、旧バージョンがVectorに公開してあります。
　　【DotNetBarcode VB/C#2003用無料BarCodeライブラリー】 <== Vectorに公開してある名前

【８.DotNetBarcodeクラスライブラリ(DotNetBarcode.dll)の仕様書】


【メソッド名】CopyToClipboard(code As String, Width As Single, High As Single)
　　　　　 【機能】バーコードをクリップボードにコピーする。
           【パラメーター】
                code:表示するバーコードの文字
                Width:バーコードをコピーする幅。
                High:バーコードをコピーする高さ。
           【注意点】
　　　　　　　　QRコードを使う場合は、バーコードが正方形になるため、WidthとHighの小さい方の大きさで
                バーコードが作成されます。ただし、QRコードは１ピクセル単位でバーコードを作成するため、
                WidthとHighの小さい方の大きさに収まる最大のピクセルを自動的に選択します。
                １ピクセルでバーコードを表示しても大きさが収まらない場合は、バーコードはコピーされません。

【メソッド名】Save(code As String, FileName As String, Width As Single, High As Single)
         　【機能】バーコードをSaveFileTypeで指定したファイル形式に保存する。
                指定可能なファイル形式はBitMap,Gif,Jpeg,Png,Tiff
        　           BitMap => ビットマップ・イメージ形式
        　           Gif => GIFファイル・イメージ形式
        　           Jpeg => JPEGファイル・イメージ形式
        　           Png => PNGファイル・イメージ形式
        　           Tiff => TIFFファイル・イメージ形式
           【V2.3.0からV2.4.0への重要な変更点】
        　　　　.Net Frameworkの制約により、バーコードの保存時のWMFとEMFファイルの指定は、
                PNGでしか保存されないことが判明しました。このため、マニュアル上はWMFと
                EMFファイルのサポートはやめました。(実際には指定はできますが、PNGで保存されます)
           【パラメーター】
                code:表示するバーコードの文字
                FileName:保存するファイル名。ファイル名にファイルタイプの指定がない時は、
                  自動的に保存するファイル形式に従って補われます。 
                Width:バーコードを保存する幅。
                High:バーコードを保存する高さ。
           【注意点】
               QRコードを使う場合は、バーコードが正方形になるため、WidthとHighの小さい方の大きさでバーコードが
               作成されます。ただし、QRコードは１ピクセル単位でバーコードを作成するため、WidthとHighの小さい方の
               大きさに収まる最大のピクセルを自動的に選択します。
               １ピクセルでバーコードを表示しても大きさが収まらない場合は、バーコードは保存されません。


【メソッド名】WriteBar(code As String, X As Single, Y As Single, X2 As Single, Y2 As Single, 
                 ev As System.Drawing.Graphics)
　　　　 　【機能】バーコードを表示する。
           【パラメーター】
                code:表示するバーコードの文字
　              X:バーコードを表示する左上隅のx 座標。
                Y:バーコードを表示する左上隅のy 座標。
                X2:バーコードを表示する幅。
                Y2:バーコードを表示する高さ。
                ev:System.Drawing.Graphics
           【注意点】
　　　　　　　QRコードを使う場合は、バーコードが正方形になるため、WidthとHighの小さい方の大きさでバーコードが
              作成されます。ただし、QRコードは１ピクセル単位でバーコードを作成するため、WidthとHighの小さい方の
              大きさに収まる最大のピクセルを自動的に選択します。
              １ピクセルでバーコードを表示しても大きさが収まらない場合は、バーコードは表示されません。

【メソッド名】QRWriteBar(code As String, X As Single, Y As Single, pPixelSize As Integer,
                 ev As System.Drawing.Graphics)
          【機能】
               1モジュール（１つの点の大きさ：ピクセル）の大きさを指定してQRコードを表示する
          【パラメーター】
               code:表示するバーコードの文字
               X:バーコードを表示する左上隅の x 座標。 
               Y:バーコードを表示する左上隅の y 座標。 
               pPixelSize:1モジュール（１つの点の大きさ：ピクセル）の大きさ。 
               ev:System.Drawing.Graphics
          【注意点】
　　　　　　このメソッドを使うと、【プロパティ名】Typeが1次元バーコードの指定になっていても
　　　　　　ＱＲコードを表示します。

【メソッド名】 QRCopyToClipboard(code As String, pPixelSize As Integer)
        【機能】
            1モジュール（１つの点の大きさ：ピクセル）の大きさを指定して
　　　　　　QRコードをクリップボードにコピーする。

        【パラメーター】
             code:表示するバーコードの文字
             pPixelSize:1モジュール（１つの点の大きさ：ピクセル）の大きさ。 
　　　　【注意点】
　　　　　　このメソッドを使うと、【プロパティ名】Typeが1次元バーコードの指定になっていても
　　　　　　ＱＲコードを表示します。

【メソッド名】 QRSave(code As String, FileName As String, pPixelSize As Integer)
        【機能】
            1モジュール（１つの点の大きさ：ピクセル）の大きさを指定して
　　　　　　QRコードをSaveFileTypeで指定したファイル形式に保存する。
　　        指定可能なファイル形式はBitMap,Gif,Jpeg,Png,Tiff
        　           BitMap => ビットマップ・イメージ形式
        　           Gif => GIFファイル・イメージ形式
        　           Jpeg => JPEGファイル・イメージ形式
        　           Png => PNGファイル・イメージ形式
        　           Tiff => TIFFファイル・イメージ形式
　　　　【V2.3.0からV2.4.0への重要な変更点】
　　　　　　.Net Frameworkの制約により、バーコードの保存時のWMFとEMFファイルの指定は、
　　　　　　PNGでしか保存されないことが判明しました。このため、マニュアル上はWMFと
　　　　　　EMFファイルのサポートはやめました。(実際には指定はできますが、PNGで保存されます)

       【パラメーター】
                code:表示するバーコードの文字
                FileName:保存するファイル名。ファイル名にファイルタイプの指定がない時は、
　　　　　　　　自動的に保存するファイル形式に従って補われます。 
　　　　　      pPixelSize:1モジュール（１つの点の大きさ：ピクセル）の大きさ。 
　　　　【注意点】
　　　　　　このメソッドを使うと、【プロパティ名】Typeが1次元バーコードの指定になっていても
　　　　　　ＱＲコードを表示します。

    【プロパティ名】Type
　　　　バーコートのタイプを表す。(DefaultはJan13)
            指定可能なタイプは、Jan13、Jan8、Code39
        　　Jan13 => JAN(Japan Article Number)の１３桁。一般商品に印字され、身近なバーコード。
            Jan8 => JAN(Japan Article Number)の８桁。一般商品に印字され、身近なバーコード。
    　　    Code39 => 数字以外も表示できるコード。産業界で使われています。

    【プロパティ名】BarColor
　　　　バーコードの色を変える。(DefaultはColor.Black)

    【プロパティ名】BackGroundColor
　　　　バーコードの背景色を変える。(DefaultはColor.White)


    【プロパティ名】FontColor
　　　　文字のフォントの色を変える。(DefaultはColor.Black)

    【プロパティ名】FontBackGroundColor
　　　　文字のフォントの背景色を変える。(DefaultはColor.White)

    【プロパティ名】FontName
　　　　文字のフォントの名前を変える。(Defaultは"ＭＳ Ｐゴシック")

    【プロパティ名】FontSize
　　　　文字のフォントの大きさを変える。(Defaultは9)

    【プロパティ名】AddChechDigit
　　　　チェックデジットを追加する。(DefaultはFalse)

    【プロパティ名】PrintChar
　　　　文字を表示する。(DefaultはTrue)

    【プロパティ名】PrintCheckDigitChar
　　　　文字を表示する時にチェックデジットを表示する。(DefaultはFalse)
　　　　Code39のときはPrintCheckDigitChar=Trueの場合は＊も表示される。

    【プロパティ名】WriteDebugInfo
　　　　バーコードのディバッグ情報を書く。(DefaultはFalse)
　　　　バーコードのディバッグ情報は１文字に対して、奇数目のバーか偶数目のバーか最後のバーかで色を変える

    【プロパティ名】DebugInfoOddColor
　　　　バーコードのディバッグ情報の奇数番目のバーの色。(DefaultはColor.DarkBlue)
　　　　バーコードのディバッグ情報は１文字に対して、奇数目のバーか偶数目のバーか最後のバーかで色を変える

    【プロパティ名】DebugInfoEvenColor
　　　　バーコードのディバッグ情報の偶数番目のバーの色。(DefaultはColor.LightBlue)
　　　　バーコードのディバッグ情報は１文字に対して、奇数目のバーか偶数目のバーか最後のバーかで色を変える

    【プロパティ名】DebugInfoLastColor
　　　　バーコードのディバッグ情報の最後のバーの色。(DefaultはColor.Red)
　　　　バーコードのディバッグ情報は１文字に対して、奇数目のバーか偶数目のバーか最後のバーかで色を変える

    【プロパティ名】SaveFileType (DotNetBarcode V2で追加)
　　　　ファイルに保存する時のファイルフォーマットを指定する(DefaultはBitMap)
        指定可能なファイル形式はBitMap,Emf,Gif,Jpeg,Png,Tiff,Wmf
           BitMap => ビットマップ・イメージ形式
           Emf => メタファイル・イメージ形式
           Gif => GIFファイル・イメージ形式
           Jpeg => JPEGファイル・イメージ形式
           Png => PNGファイル・イメージ形式
           Tiff => TIFFファイル・イメージ形式
           Wmf =>  メタファイル・イメージ形式

    【プロパティ名】FontBold (DotNetBarcode V2で追加)
　　　　フォントをBoldにする(DefaultはFalse)

    【プロパティ名】FontItalic (DotNetBarcode V2で追加)
　　　　フォントをItalicにする(DefaultはFalse)

     =========================================
     === 以下はＱＲＣｏｄｅのみでサポート ====
     =========================================

    【プロパティ名】QRSetECCRate
　　　　誤り訂正レベルを設定します。

    【プロパティ名】QRSetTextType
　　　　文字モードを設定します。

    【プロパティ名】QRInquireTextType
　　　　バーコートを表示するときに選択された文字モードを返します。

    【プロパティ名】QRSetVersion
　　　　シンボルの型番(バージョン)を設定します。

    【プロパティ名】QRInquireVersion
　　　　自動に設定された場合に、選択されたバージョンを返します。

    【プロパティ名】QRInquireNumericBits
　　　　数字モードで、指定した文字でＱＲコードを作成した時に必要な文字のビット数を返す。

    【プロパティ名】QRInquireAlphaNumericBits
　　　　英数字モードで、指定した文字でＱＲコードを作成した時に必要な文字のビット数を返す。

    【プロパティ名】QRInquireKanjiBits
　　　　漢字モードで、指定した文字でＱＲコードを作成した時に必要な文字のビット数を返す。

    【プロパティ名】QRInquireBinaryBits
　　　　８ビットバイト・モードで、指定した文字でＱＲコードを作成した時に必要な文字のビット数を返す。

    【プロパティ名】QRQuitZone
　　　　クワイエット・ゾーン（余白）のモジュール数
        (Defaultは４)

    【プロパティ名】QRInquireModuleSize
　　　　選択されたモジュールのサイズ(縦横それぞれの点の数)を返す。
        (実行前のDefaultは０)

    【プロパティ名】Rotate
　　    回転角度（右回り）を指定する。
　　    回転してもバーコードを表示する座標は必ず右上を指定します。
　　    指定できる値は、Rotates.Rotate0,Rotates.Rotate90,Rotates.Rotate180,Rotates.Rotate270の４つの値
　　    一次元バーコードにも、ＱＲコードにも適用される
　　    QRRotateが０以外の値が指定されＱＲコードが表示される場合、Rotateの値をセットすると
        QRRotateは０になり無視される。

    【プロパティ名】QRRotate
    　　任意の回転角度を指定可能（ＱＲコード専用）
    　　回転してもバーコードを表示する座標は右上を指定します。
    　　QRRotateの値をセットすると、Rotateの値はRotates.Rotate0になり無視される。

    【プロパティ名】QRColorBigMark
　　　　位置検出パターン（大きいマーク）の色を指定します。

    【プロパティ名】QRBackColorBigMark
　　　　位置検出パターン（大きいマーク）の背景色を指定します。

    【プロパティ名】QRColorBigMark1
　　　　右上の位置検出パターン（大きいマーク）の色を指定します。

    【プロパティ名】QRBackColorBigMark1
　　　　右上の位置検出パターン（大きいマーク）の背景色を指定します。

    【プロパティ名】QRColorBigMark2
　　　　右下の位置検出パターン（大きいマーク）の色

    【プロパティ名】QRBackColorBigMark2
　　　　右下の位置検出パターン（大きいマーク）の背景色

    【プロパティ名】QRColorBigMark3
　　　　左上の位置検出パターン（大きいマーク）の色

    【プロパティ名】QRBackColorBigMark3
　　　　左上の位置検出パターン（大きいマーク）の背景色

    【プロパティ名】QRColorSmallMark
　　　　位置合わせパターン（小さいマーク）の色

    【プロパティ名】QRBackColorSmallMark
　　　　位置合わせパターン（小さいマーク）の背景色

    【プロパティ名】QRColorBigMarkBorder
　　　　位置検出パターンの境界線（大きいマークの境界）の色

    【プロパティ名】QRColorBigMarkBorder1
　　　　右上の位置検出パターンの境界線（大きいマークの境界）の色

    【プロパティ名】QRColorBigMarkBorder2
　　　　右下の位置検出パターンの境界線（大きいマークの境界）の色

    【プロパティ名】QRColorBigMarkBorder3
　　　　左上の位置検出パターンの

    【プロパティ名】QRColorTimingPattern
　　　　タイミング・パターン（左と上の点線）の色

    【プロパティ名】QRBackColorTimingPattern
　　　　タイミング・パターン（左と上の点線）の背景色

    【プロパティ名】QRColorVersionInformation
　　　　型番情報の色

    【プロパティ名】QRBackColorVersionInformation
　　　　型番情報の背景色

    【プロパティ名】QRColorFormatInformation
　　　　形式情報の色

    【プロパティ名】QRBackColorFormatInformation
　　　　形式情報の背景色

    【プロパティ名】QRColorQuitZone
　　　　クワイエット・ゾーン（余白）の色


【９.Ｑ＆Ａ】

　　【質問１】

　　　　Webアプリケーションで使うことはできますか。

　　【答え１】

　　　　現在のバージョンでは対応していません。

　　【質問２】

　　　　バージョン１では、バーコードを保存する時にうまく保存できないことがありましたが
　　　　バージョン２では修正されていますか。

　　【答え２】

　　　　バージョン１では、バーコードを保存する時にクリップボード経由で行っていたため問題がありました。
　　　　バージョン２では直接保存しますので、問題はありません。
　　　　さらに、バージョン２では７種類のファイル形式で保存できるようになりました。

　　【質問３】

　　　　２次元バーコードへの追加対応はありませんか。

　　【答え３】

　　　　V2.2.0でＱＲコードへの対応しました。

　　【質問４】

　　　　他の１次元バーコード（Code128,ITF,NW-7など）への追加対応はありませんか。

　　【答え４】

　　　　他の１次元バーコード（Code128,ITF,NW-7など）への興味はほとんどないので、
　　　　まず追加対応はないと思います。

　　【質問５】

　　　　DotNetBarcodeクラスライブラリのソースコードを公開する予定はありませんか。

　　【答え５】

　　　　現在のところ、公開する予定はありません。

　　【質問６】

　　　　このバーコードライブラリを使った使用実績はどうですか。

　　【答え６】

　　　　JanやCode39は年間２万枚以上を印刷する伝票の納品確認などに３〜４年間使っていますが、
　　　　今のところバーコードが間違っていたなどの問題はまったくありません。
　　　　他の利用者からも、バーコードが間違っていたなどの連絡は受けていません。
　　　　また、V1.0.0からV2.0.0でのバージョンアップでバーコードの表示ロジックは
　　　　一切変更していませんので、問題ないと思われます。
　　　　QRコードに関してはこれからですが、かなりのテストをしましたが問題はありませんでした。


